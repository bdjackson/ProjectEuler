#!/usr/bin/env python 
# ============================================================================
import sys

#  ===========================================================================
#  = http://projecteuler.net/problem=15                                      =
#  = - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - =
#  = How paths are there in a 20x20 grid (21x21 nodes) without backtracking  =
#  ===========================================================================

# ----------------------------------------------------------------------------
def dumpGrid(grid):
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  print grid
  for r in xrange(len(grid)):
    line = ""
    for c in xrange(len(grid[r])):
      line += '%4s' % grid[r][c]
    print line

# ----------------------------------------------------------------------------
def getNumPaths(rows, cols):
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  grid = []*(rows+1)
  for r in xrange(rows+1):
    grid.append([0]*(cols+1))

  for r in xrange(rows, -1, -1):
    for c in xrange(cols, -1, -1):
      print '%d - %d' % (r, c)
      right = 0 if c+1 >= cols+1 else grid[r][c+1]
      down  = 0 if r+1 >= rows+1 else grid[r+1][c]
      grid[r][c] = right + down
      if grid[r][c] == 0:
        grid[r][c] = 1

  dumpGrid(grid)
  print 'A %dx%d grid has %d paths without backtracking' % ( rows
                                                           , cols
                                                           , grid[0][0]
                                                           )

# ============================================================================
def main():
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  getNumPaths(1,1)
  print '====================================================='
  getNumPaths(2,2)
  print '====================================================='
  getNumPaths(3,3)
  print '====================================================='
  getNumPaths(4,4)
  print '====================================================='
  getNumPaths(20,20)

# ============================================================================
if __name__ == "__main__":
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  sys.exit( main() )

# ============================================================================
#  ============
#  = solution =
#  ============
# 137846528820
